---
# tasks file for postgres
- name: Run dpkg --configure -a to fix interrupted installations
  command: dpkg --configure -a
  become: yes
  ignore_errors: yes

- name: Установка пакетов
  apt:
    name:
      - python3-pip
    state: present
    update_cache: yes

- name: Установка библиотеки psycopg2-binary
  pip:
    name: psycopg2-binary
    state: present

- name: Установка PostgreSQL
  apt:
    name: postgresql
    state: present
    update_cache: yes

- name: Скачивание пакета репозитория Zabbix
  get_url:
    url: "https://repo.zabbix.com/zabbix/7.2/release/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.2+ubuntu22.04_all.deb"
    dest: "/tmp/zabbix-release_latest_7.2+ubuntu22.04_all.deb"

- name: Установка пакета репозитория Zabbix
  command: dpkg -i /tmp/zabbix-release_latest_7.2+ubuntu22.04_all.deb

- name: update Zabbix
  command: apt update

- name: Установка Zabbix Server для БД
  apt:
    name:
      - zabbix-sql-scripts
    state: present
    update_cache: yes

- name: Настройка конфигурации PostgreSQL
  template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf

- name: Настройка PostgreSQL для использования trust в pg_hba.conf
  template:
    src: "pg_hba.conf.j2"   
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf" 

- name: Перезагрузка PostgreSQL для применения изменений в pg_hba.conf
  systemd:
    name: postgresql
    state: restarted

- name: Создание пользователя PostgreSQL replicator
  postgresql_user:
    name: replicator
    password: "1234"
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Установка репликационных прав для пользователя replicator
  postgresql_query:
    query: "ALTER ROLE replicator WITH REPLICATION PASSWORD '1234';"
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание пользователя PostgreSQL wiki
  postgresql_user:
    name: wikiuser
    password: "{{ wikiuser_password }}"
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание базы данных PostgreSQL wiki
  postgresql_db:
    name: my_wiki
    owner: wikiuser
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Предоставить все привилегии пользователю wikiuser на базе данных my_wiki
  postgresql_query:
    db: my_wiki
    query: "GRANT ALL PRIVILEGES ON DATABASE my_wiki TO wikiuser;"
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание пользователя PostgreSQL zabbix
  postgresql_user:
    name: zabbix
    password: "i7def"
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание базы данных PostgreSQL zabbix
  postgresql_db:
    name: zabbix
    encoding: UTF8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    owner: zabbix
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Предоставить все привилегии пользователю zabbix на базе данных zabbix
  postgresql_query:
    db: zabbix
    query: "GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;"
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Импорт схемы базы данных Zabbix
  shell: "zcat /usr/share/zabbix/sql-scripts/postgresql/server.sql.gz | psql -U zabbix -d zabbix"
  args:
    executable: /bin/bash
  become: true
  become_user: postgres

- name: Установить пароль для пользователя PostgreSQL
  postgresql_user:
    name: postgres
    password: "{{ postgres_password }}"
    state: present
    login_user: postgres
    host: "{{ postgres_host }}"
    port: 5432

- name: Изменить метод аутентификации на md5
  template:
    src: "pg_hba2.conf.j2"   
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf" 

- name: Перезагрузка PostgreSQL для применения изменений в pg_hba.conf
  systemd:
    name: postgresql
    state: restarted

- name: stop postgressql
  systemd:
    name: postgresql
    state: stopped

- name: Установка Etcd
  apt:
    name: etcd
    state: present

- name: stop etcd
  systemd:
    name: etcd
    state: stopped

- name: удаление каталога данных и перемещение
  shell: rm -rfv /var/lib/etcd/*
  become: true
 
- name: Создание конфигурационного файла для Etcd
  template:
    src: etcd.conf.j2
    dest: "/etc/default/etcd"

- name: Запуск службы Etcd
  systemd:
    name: etcd
    state: started
    enabled: yes

- name: Установка зависимостей для Patroni
  apt:
    name:
      - python3-pip
      - python3-dev
      - libpq-dev
    state: present
    update_cache: yes

- name: Установка Patroni через pip
  pip:
    name: patroni
    state: present
    executable: pip3

- name: проверка/доустановка через pip
  shell: |
    pip3 install psycopg2-binary && pip3 install wheel && pip3 install python-etcd
  ignore_errors: yes

- name: Создание пользовательского каталога Patroni
  file:
    path: "{{ patroni_conf_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0755"

- name: Создание конфигурационного файла Patroni
  template:
    src: patroni.yml.j2
    dest: "{{ patroni_conf_dir }}/config.yml"

- name: Создание systemd юнит-файла для Patroni
  copy:
    dest: /etc/systemd/system/patroni.service
    content: |
      [Unit]
      Description=Patroni
      After=network.target

      [Service]
      User=postgres
      Group=postgres
      ExecStart=/usr/local/bin/patroni {{ patroni_conf_dir }}/config.yml
      ExecStop=/bin/kill -INT $MAINPID
      Restart=always
      LimitNOFILE=65536

      [Install]
      WantedBy=multi-user.target

- name: Перезагрузка systemd для применения изменений
  systemd:
    daemon_reload: yes

- name: Запуск службы Patroni
  systemd:
    name: patroni
    state: started
    enabled: yes

- name: Очистка данных PostgreSQL (только на psql2)
  shell: |
    systemctl stop patroni
    rm -rf /var/lib/postgresql/{{ postgresql_version }}/main/*
  become: true
  when: inventory_hostname == "psql2"

- name: Очистка данных PostgreSQL (только на psql2)
  shell: |
    systemctl stop patroni
    rm -rf /var/lib/postgresql/{{ postgresql_version }}/main/*
  become: true
  when: inventory_hostname == "psql2"

- name: Перезапуск Patroni (только на psql2)
  systemd:
    name: patroni
    state: restarted
    enabled: yes
  when: inventory_hostname == "psql2"

- name: копирование скрипта бэкапов на Replic
  template:
    src: "backupdb.sh.j2"   
    dest: "/etc/backupdb.sh" 
  when: inventory_hostname == "psql2"

- name: +x for script
  command: chmod +x "/etc/backupdb.sh"
  when: inventory_hostname == "psql2"
  
- name: cron script
  lineinfile:
    path: "/var/spool/cron/crontabs/root"  
    line: "0 3 * * * /etc/backupdb.sh"
    create: yes
  when: inventory_hostname == "psql2"