---
# tasks file for postgres
- name: Завершение всех процессов, использующих блокировку dpkg
  shell: |
    # Проверяем, если процессы заблокированы, завершаем их
    pids=$(ps aux | grep -E '([u]nattended-upgrades|[a]pt)' | awk '{print $2}')
    for pid in $pids; do
      kill -9 $pid
      echo "Завершен процесс с PID $pid"
    done
    # Делаем попытку очистить lock-файлы
    rm -f /var/lib/dpkg/lock-frontend
    rm -f /var/cache/apt/archives/lock
    rm -f /var/lib/apt/lists/lock
    dpkg --configure -a
    apt-get clean
  changed_when: false
  ignore_errors: yes
  retries: 5
  delay: 10

- name: Перезапуск службы apt
  shell: |
    systemctl restart apt-daily-upgrade.timer
    systemctl restart apt-daily.timer
    systemctl restart apt.service
  changed_when: false
  ignore_errors: yes

- name: Отключение автоматических обновлений
  shell: |
    systemctl stop unattended-upgrades
    systemctl disable unattended-upgrades
  ignore_errors: yes

- name: Задержка перед установкой пакетов
  pause:
    seconds: 10

- name: Run dpkg --configure -a to fix interrupted installations
  command: dpkg --configure -a
  become: yes
  ignore_errors: yes


- name: Установка PostgreSQL
  apt:
    name: postgresql
    state: present
    update_cache: yes

- name: Добавление ключа для репозитория Zabbix
  apt_key:
    url: "https://repo.zabbix.com/zabbix-official-repo.key"
    state: present    

- name: Добавление репозитория Zabbix
  apt_repository:
    repo: "deb http://repo.zabbix.com/zabbix/6.0/ubuntu jammy main"
    state: present

- name: Установка Zabbix Server для БД
  apt:
    name:
      - zabbix-server-pgsql
      - zabbix-sql-scripts
    state: present
    update_cache: yes

- name: Настройка конфигурации PostgreSQL
  template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
  notify:
    - Restart PostgreSQL

- name: Настройка PostgreSQL для использования trust в pg_hba.conf
  template:
    src: "pg_hba.conf.j2"   
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf" 
  notify:
    - Restart PostgreSQL

- name: Перезагрузка PostgreSQL для применения изменений в pg_hba.conf
  systemd:
    name: postgresql
    state: restarted

- name: Создание пользователя PostgreSQL wiki
  postgresql_user:
    name: wikiuser
    password: "{{ wikiuser_password }}"
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание базы данных PostgreSQL wiki
  postgresql_db:
    name: my_wiki
    owner: wikiuser
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Предоставить все привилегии пользователю wikiuser на базе данных my_wiki
  postgresql_query:
    db: my_wiki
    query: "GRANT ALL PRIVILEGES ON DATABASE my_wiki TO wikiuser;"
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание пользователя PostgreSQL zabbix
  postgresql_user:
    name: zabbix
    password: "i7def"
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Создание базы данных PostgreSQL zabbix
  postgresql_db:
    name: zabbix
    encoding: UTF8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    owner: zabbix
    state: present
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Предоставить все привилегии пользователю zabbix на базе данных zabbix
  postgresql_query:
    db: zabbix
    query: "GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;"
    login_user: postgres
    login_password: "{{ postgres_password }}"
    host: "{{ postgres_host }}"
    port: 5432

- name: Импорт схемы базы данных Zabbix
  shell: "zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | psql -U zabbix -d zabbix"
  args:
    executable: /bin/bash
  become: true
  become_user: postgres

- name: Установить пароль для пользователя PostgreSQL
  postgresql_user:
    name: postgres
    password: "{{ postgres_password }}"
    state: present
    login_user: postgres
    host: "{{ postgres_host }}"
    port: 5432

- name: Изменить метод аутентификации на md5
  template:
    src: "pg_hba2.conf.j2"   
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf" 
  notify:
    - Restart PostgreSQL

- name: Перезагрузка PostgreSQL для применения изменений в pg_hba.conf
  systemd:
    name: postgresql
    state: restarted