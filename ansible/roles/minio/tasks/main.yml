---
# tasks file for minio
- name: Убедиться, что необходимые пакеты для добавления репозитория установлены
  apt:
    name:
      - apt-transport-https
      - wget
      - python3-pip
      - unzip
      - haproxy
    state: present
    update_cache: yes

- name: Установка библиотеки psycopg2-binary
  pip:
    name: psycopg2-binary
    state: present   

- name: Скачать MinIO бинарный файл
  get_url:
    url: "https://dl.min.io/server/minio/release/linux-amd64/minio"
    dest: "/usr/local/bin/minio"
    mode: '0755'

- name: Создать пользователя и группу для MinIO
  user:
    name: minio
    state: present
    system: yes

- name: Создать директорию для данных MinIO
  file:
    path: /data/minio
    state: directory
    owner: minio
    group: minio
    mode: '0755'

- name: Настройка конфигурации MinIO
  template:
    src: "minio.conf.j2"
    dest: "/etc/default/minio"
  notify:
    - Restart minio

- name: Создание unit-файла для MinIO
  template:
    src: "minio.service.j2"
    dest: "/etc/systemd/system/minio.service"
 
- name: Перезагрузка systemd для применения изменений
  systemd:
    daemon_reload: yes

- name: restart MinIO
  service:
    name: minio
    state: restarted
    enabled: yes

- name: Download MinIO Client
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: '0755'

- name: Configure MinIO Client
  command: >
    mc alias set myminio http://{{ hostvars['minio']['ansible_host'] }}:9000 keyaccess keysecret
  register: mc_config
  changed_when: "'is successfully added' in mc_config.stdout"

- name: Create a bucket in MinIO
  command: >
    mc mb myminio/mediawiki
  register: mc_create_bucket
  changed_when: "'created successfully' in mc_create_bucket.stdout"

- name: доступ
  command: >
    mc policy set public myminio/mediawiki

- name: доступ
  command: >
    mc policy set download myminio/mediawiki

- name: Настройка HAproxy
  template:
    src: "haproxy.cfg.j2"
    dest: "/etc/haproxy/haproxy.cfg"
  
- name: +новая строка
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    line: ''
    insertafter: EOF

- name: права haproxy.cfg
  ansible.builtin.file:
    path: /etc/haproxy/haproxy.cfg
    mode: '0644'


- name: Вывод результата проверки HAProxy
  debug:
    var: haproxy_check_result.stdout

- name: Проверка конфигурации HAProxy
  command: haproxy -c -f /etc/haproxy/haproxy.cfg
  register: haproxy_check_result
  ignore_errors: yes

- name: restart HAproxy
  service:
    name: haproxy
    state: restarted
    enabled: yes 